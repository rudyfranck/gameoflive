{"version":3,"sources":["components/components2/Box.js","components/Grid.js","components/Buttons.js","App.js","serviceWorker.js","index.js"],"names":["Box","selectBox","_this","props","row","col","react_default","a","createElement","className","this","boxClass","id","onClick","React","Component","Grid","width","cols","rowsArr","i","rows","j","boxId","gridFull","push","components2_Box","key","style","Buttons","handleSelect","evt","gridSize","ButtonToolbar","playButton","pauseButton","clear","slow","fast","seed","DropdownButton","title","onSelect","MenuItem","eventKey","arrayClone","arr","JSON","parse","stringify","Main","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","gridCopy","state","setState","Math","floor","random","clearInterval","intervalId","setInterval","play","speed","grid","Array","fill","map","generation","size","g","g2","count","Date","toLocaleTimeString","components_Grid","components_Buttons","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.3a47611c.chunk.js","sourcesContent":["import React from \"react\";\r\nclass Box extends React.Component{\r\n    selectBox = () => {\r\n\t\tthis.props.selectBox(this.props.row, this.props.col);\r\n\t}\r\n    render(){\r\n        return(\r\n            <div\r\n            className={this.props.boxClass}\r\n            id={this.props.id}\r\n            onClick={this.selectBox}\r\n        />\r\n );\r\n    }\r\n}\r\n\r\nexport default Box;\r\n\r\n\r\n\r\n","import React from \"react\";\r\nimport Box from \"./components2/Box\";\r\n\r\nclass Grid extends React.Component{\r\n    render(){\r\n        const width = (this.props.cols * 14);\r\n\t\tvar rowsArr = [];\r\n\r\n\t\tvar boxClass = \"\";\r\n\t\tfor (var i = 0; i < this.props.rows; i++) {\r\n\t\t\tfor (var j = 0; j < this.props.cols; j++) {\r\n\t\t\t\tlet boxId = i + \"_\" + j;\r\n\r\n\t\t\t\tboxClass = this.props.gridFull[i][j] ? \"box on\" : \"box off\";\r\n\t\t\t\trowsArr.push(\r\n\t\t\t\t\t<Box\r\n\t\t\t\t\t\tboxClass={boxClass}\r\n\t\t\t\t\t\tkey={boxId}\r\n\t\t\t\t\t\tboxId={boxId}\r\n\t\t\t\t\t\trow={i}\r\n\t\t\t\t\t\tcol={j}\r\n\t\t\t\t\t\tselectBox={this.props.selectBox}\r\n\t\t\t\t\t/>\r\n\t\t\t\t);\r\n\t\t\t}\r\n\t\t}\r\n\r\n        return(\r\n            <div className=\"grid\" style={{width: width}}>\r\n            {rowsArr}\r\n        </div>\r\n            \r\n        );\r\n    }\r\n}\r\n        \t\r\n   \r\n\r\n \r\nexport default Grid;","import React from \"react\";\r\nimport {ButtonToolbar, MenuItem, DropdownButton} from 'react-bootstrap';\r\n\r\nclass Buttons extends React.Component{\r\n    handleSelect = (evt) => {\r\n\t\tthis.props.gridSize(evt);\r\n\t}\r\n    render(){\r\n        return(\r\n            <div className=\"center\">\r\n            <ButtonToolbar>\r\n                <button className=\"btn btn-default\" onClick={this.props.playButton}>\r\n                    Play\r\n                </button>\r\n                <button className=\"btn btn-default\" onClick={this.props.pauseButton}>\r\n                  Pause\r\n                </button>\r\n                <button className=\"btn btn-default\" onClick={this.props.clear}>\r\n                  Clear\r\n                </button>\r\n                <button className=\"btn btn-default\" onClick={this.props.slow}>\r\n                  Slow\r\n                </button>\r\n                <button className=\"btn btn-default\" onClick={this.props.fast}>\r\n                  Fast\r\n                </button>\r\n                <button className=\"btn btn-default\" onClick={this.props.seed}>\r\n                  Seed\r\n                </button>\r\n                <DropdownButton\r\n                    title=\"Grid Size\"\r\n                    id=\"size-menu\"\r\n                    onSelect={this.handleSelect}\r\n                >\r\n                    <MenuItem eventKey=\"1\">20x10</MenuItem>\r\n                    <MenuItem eventKey=\"2\">50x30</MenuItem>\r\n                    <MenuItem eventKey=\"3\">70x50</MenuItem>\r\n                </DropdownButton>\r\n            </ButtonToolbar>\r\n        </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\nexport default Buttons;","import React from \"react\";\nimport Grid from \"./components/Grid\";\nimport Buttons from \"./components/Buttons\";\n\n\nclass Main extends React.Component{\n  constructor() {\n\t\tsuper();\n\t\tthis.speed = 100;\n\t\tthis.rows = 30;\n\t\tthis.cols = 50;\n\n\t\tthis.state = {\n\t\t\tgeneration: 0,\n\t\t\tgridFull: Array(this.rows).fill().map(() => Array(this.cols).fill(false))\n\t\t}\n\t}\n\n\tselectBox = (row, col) => {\n\t\tlet gridCopy = arrayClone(this.state.gridFull);\n\t\tgridCopy[row][col] = !gridCopy[row][col];\n\t\tthis.setState({\n\t\t\tgridFull: gridCopy\n\t\t});\n\t}\n\n\tseed = () => {\n\t\tlet gridCopy = arrayClone(this.state.gridFull);\n\t\tfor (let i = 0; i < this.rows; i++) {\n\t\t\tfor (let j = 0; j < this.cols; j++) {\n\t\t\t\tif (Math.floor(Math.random() * 4) === 1) {\n\t\t\t\t\tgridCopy[i][j] = true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tthis.setState({\n\t\t\tgridFull: gridCopy\n\t\t});\n\t}\n\n\tplayButton = () => {\n\t\tclearInterval(this.intervalId);\n\t\tthis.intervalId = setInterval(this.play, this.speed);\n\t}\n\n\tpauseButton = () => {\n\t\tclearInterval(this.intervalId);\n\t}\n\n\tslow = () => {\n\t\tthis.speed = 1000;\n\t\tthis.playButton();\n\t}\n\n\tfast = () => {\n\t\tthis.speed = 100;\n\t\tthis.playButton();\n\t}\n\n\tclear = () => {\n\t\tvar grid = Array(this.rows).fill().map(() => Array(this.cols).fill(false));\n\t\tthis.setState({\n\t\t\tgridFull: grid,\n\t\t\tgeneration: 0\n\t\t});\n\t}\n\n\tgridSize = (size) => {\n\t\tswitch (size) {\n\t\t\tcase \"1\":\n\t\t\t\tthis.cols = 20;\n\t\t\t\tthis.rows = 10;\n\t\t\tbreak;\n\t\t\tcase \"2\":\n\t\t\t\tthis.cols = 50;\n\t\t\t\tthis.rows = 30;\n\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tthis.cols = 70;\n\t\t\t\tthis.rows = 50;\n\t\t}\n\t\tthis.clear();\n\n\t}\n\n\tplay = () => {\n\t\tlet g = this.state.gridFull;\n\t\tlet g2 = arrayClone(this.state.gridFull);\n\n\t\tfor (let i = 0; i < this.rows; i++) {\n\t\t  for (let j = 0; j < this.cols; j++) {\n\t\t    let count = 0;\n\t\t    if (i > 0) if (g[i - 1][j]) count++;\n\t\t    if (i > 0 && j > 0) if (g[i - 1][j - 1]) count++;\n\t\t    if (i > 0 && j < this.cols - 1) if (g[i - 1][j + 1]) count++;\n\t\t    if (j < this.cols - 1) if (g[i][j + 1]) count++;\n\t\t    if (j > 0) if (g[i][j - 1]) count++;\n\t\t    if (i < this.rows - 1) if (g[i + 1][j]) count++;\n\t\t    if (i < this.rows - 1 && j > 0) if (g[i + 1][j - 1]) count++;\n\t\t    if (i < this.rows - 1 && j < this.cols - 1) if (g[i + 1][j + 1]) count++;\n\t\t    if (g[i][j] && (count < 2 || count > 3)) g2[i][j] = false;\n\t\t    if (!g[i][j] && count === 3) g2[i][j] = true;\n\t\t  }\n\t\t}\n\t\tthis.setState({\n\t\t  gridFull: g2,\n\t\t  generation: this.state.generation + 1\n\t\t});\n\n\t}\n\n\tcomponentDidMount() {\n\t\tthis.seed();\n\t\tthis.playButton();\n\t}\n  render(){\n    \n    return(\n      <div>\n        <h1>The Game of Life</h1>\n\t\t\t\t<h3>It is {new Date().toLocaleTimeString()}.</h3>\n        <Grid \tgridFull={this.state.gridFull}\n\t\t\t\t\trows={this.rows}\n\t\t\t\t\tcols={this.cols}\n\t\t\t\t\tselectBox={this.selectBox}\n\t\t\t\t\t\n      />\n      <Buttons \n      \tplayButton={this.playButton}\n        pauseButton={this.pauseButton}\n        slow={this.slow}\n        fast={this.fast}\n        clear={this.clear}\n        seed={this.seed}\n        gridSize={this.gridSize}\n      />\n      <h2>Generations: {this.state.generation}</h2>\n\t\t\t\n      </div>\n\n    );\n  }\n}\n\n\nfunction arrayClone(arr) {\n\treturn JSON.parse(JSON.stringify(arr));\n}\n export default Main;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport'./App.css';\n\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}